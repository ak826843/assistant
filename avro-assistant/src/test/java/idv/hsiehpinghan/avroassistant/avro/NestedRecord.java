/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package idv.hsiehpinghan.avroassistant.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NestedRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NestedRecord\",\"namespace\":\"idv.hsiehpinghan.avroassistant.avro\",\"fields\":[{\"name\":\"_boolean\",\"type\":\"boolean\",\"doc\":\"boolean doc\",\"default\":true,\"order\":\"ignore\"},{\"name\":\"_int\",\"type\":\"int\",\"doc\":\"int doc\",\"default\":1,\"order\":\"ignore\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** boolean doc */
   private boolean _boolean;
  /** int doc */
   private int _int;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public NestedRecord() {}

  /**
   * All-args constructor.
   */
  public NestedRecord(java.lang.Boolean _boolean, java.lang.Integer _int) {
    this._boolean = _boolean;
    this._int = _int;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return _boolean;
    case 1: return _int;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: _boolean = (java.lang.Boolean)value$; break;
    case 1: _int = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the '_boolean' field.
   * boolean doc   */
  public java.lang.Boolean getBoolean$1() {
    return _boolean;
  }

  /**
   * Sets the value of the '_boolean' field.
   * boolean doc   * @param value the value to set.
   */
  public void setBoolean$1(java.lang.Boolean value) {
    this._boolean = value;
  }

  /**
   * Gets the value of the '_int' field.
   * int doc   */
  public java.lang.Integer getInt$1() {
    return _int;
  }

  /**
   * Sets the value of the '_int' field.
   * int doc   * @param value the value to set.
   */
  public void setInt$1(java.lang.Integer value) {
    this._int = value;
  }

  /** Creates a new NestedRecord RecordBuilder */
  public static idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder newBuilder() {
    return new idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder();
  }
  
  /** Creates a new NestedRecord RecordBuilder by copying an existing Builder */
  public static idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder newBuilder(idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder other) {
    return new idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder(other);
  }
  
  /** Creates a new NestedRecord RecordBuilder by copying an existing NestedRecord instance */
  public static idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder newBuilder(idv.hsiehpinghan.avroassistant.avro.NestedRecord other) {
    return new idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for NestedRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NestedRecord>
    implements org.apache.avro.data.RecordBuilder<NestedRecord> {

    private boolean _boolean;
    private int _int;

    /** Creates a new Builder */
    private Builder() {
      super(idv.hsiehpinghan.avroassistant.avro.NestedRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other._boolean)) {
        this._boolean = data().deepCopy(fields()[0].schema(), other._boolean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._int)) {
        this._int = data().deepCopy(fields()[1].schema(), other._int);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing NestedRecord instance */
    private Builder(idv.hsiehpinghan.avroassistant.avro.NestedRecord other) {
            super(idv.hsiehpinghan.avroassistant.avro.NestedRecord.SCHEMA$);
      if (isValidValue(fields()[0], other._boolean)) {
        this._boolean = data().deepCopy(fields()[0].schema(), other._boolean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._int)) {
        this._int = data().deepCopy(fields()[1].schema(), other._int);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the '_boolean' field */
    public java.lang.Boolean getBoolean$1() {
      return _boolean;
    }
    
    /** Sets the value of the '_boolean' field */
    public idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder setBoolean$1(boolean value) {
      validate(fields()[0], value);
      this._boolean = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the '_boolean' field has been set */
    public boolean hasBoolean$1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the '_boolean' field */
    public idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder clearBoolean$1() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the '_int' field */
    public java.lang.Integer getInt$1() {
      return _int;
    }
    
    /** Sets the value of the '_int' field */
    public idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder setInt$1(int value) {
      validate(fields()[1], value);
      this._int = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the '_int' field has been set */
    public boolean hasInt$1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the '_int' field */
    public idv.hsiehpinghan.avroassistant.avro.NestedRecord.Builder clearInt$1() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public NestedRecord build() {
      try {
        NestedRecord record = new NestedRecord();
        record._boolean = fieldSetFlags()[0] ? this._boolean : (java.lang.Boolean) defaultValue(fields()[0]);
        record._int = fieldSetFlags()[1] ? this._int : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
